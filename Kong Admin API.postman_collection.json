{
	"info": {
		"_postman_id": "dbc59b97-5ad0-4f1c-a92a-a2a5707f8710",
		"name": "Kong Admin API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Routes",
			"item": [
				{
					"name": "Get Routes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Route",
									"jsonResponse.data.forEach(function (routeDetails) {",
									"    ",
									"    ",
									"    if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"      console.log('Route: ' + routeDetails.id);",
									"    }",
									"",
									"  postman.setEnvironmentVariable(\"route_\"+routeDetails.id, routeDetails.id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/routes",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"routes"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Services",
			"item": [
				{
					"name": "Get All Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "26f388f3-f2a3-49e6-a05e-4572d722ca06",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"//jsonResponse.data.forEach(function (serviceDetails) {",
									"//  console.log('Service: ' + serviceDetails.domain);",
									"//  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"//})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/{{service_echo-service}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"{{service_echo-service}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for the service",
									"//console.log('Service: ' + jsonResponse.name);",
									"postman.setEnvironmentVariable(\"service_\"+ jsonResponse.name, jsonResponse.name);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"host\":\"10.0.10.1\",\n   \"connect_timeout\":60000,\n   \"protocol\":\"http\",\n   \"name\":\"temp\",\n   \"read_timeout\":60000,\n   \"port\":80,\n   \"path\":\"/status/500\",\n   \"retries\":5,\n   \"write_timeout\":60000\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create/Update Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"host\":\"10.0.10.1\",\n   \"connect_timeout\":60000,\n   \"protocol\":\"http\",\n   \"name\":\"temp\",\n   \"read_timeout\":60000,\n   \"port\":80,\n   \"path\":\"/status/200\",\n   \"retries\":5,\n   \"write_timeout\":60000\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/{{service_temp}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"{{service_temp}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"host\":\"10.0.10.1\",\n   \"connect_timeout\":60000,\n   \"protocol\":\"http\",\n   \"name\":\"temp\",\n   \"read_timeout\":60000,\n   \"port\":80,\n   \"path\":\"/status/200\",\n   \"retries\":5,\n   \"write_timeout\":60000\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/{{service_temp}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"{{service_temp}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"//Delete the service name env variable",
									"var serviceName = (pm.request.url.path[pm.request.url.path.length -1]);",
									"postman.clearEnvironmentVariable(\"service_\" + serviceName);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/{{service_temp}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"{{service_temp}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Plugins",
			"item": [
				{
					"name": "Get All Plugins",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/plugins",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"plugins"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Plugin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"/*",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/plugins/{{plugin_31f0fb93-9b75-4452-b829-b6ec30ceef4d}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"plugins",
								"{{plugin_31f0fb93-9b75-4452-b829-b6ec30ceef4d}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Plugin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"/*",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n\"name\": \"cors\", \n\"config\": { \n  \"credentials\": null, \n  \"preflight_continue\": null \n  } \n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/{{service_temp}}/plugins/",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"{{service_temp}}",
								"plugins",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Plugin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"/*",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n\"name\": \"cors\", \n\"config\": { \n  \"credentials\": null, \n  \"preflight_continue\": null \n  } \n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/plugins/{{plugin_6e9b5b5c-e36d-4bfc-bac6-5b05b53f8b8a}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"plugins",
								"{{plugin_6e9b5b5c-e36d-4bfc-bac6-5b05b53f8b8a}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Certificates",
			"item": [
				{
					"name": "Get Certificates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/certificates",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"certificates"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Workspaces",
			"item": [
				{
					"name": "Get Workspaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each workspace,",
									"jsonResponse.data.forEach(function (workspaceDetails) {",
									"  console.log('Workspace: ' + workspaceDetails.domain);",
									"  postman.setEnvironmentVariable(\"workspace_\"+workspaceDetails.name, workspaceDetails.id);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Workspace Metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each workspace,",
									"/*",
									"jsonResponse.data.forEach(function (workspaceDetails) {",
									"  console.log('Workspace: ' + workspaceDetails.domain);",
									"  postman.setEnvironmentVariable(\"workspace_\"+workspaceDetails.name, workspaceDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/{{workspace_newWorkspace}}/meta",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"{{workspace_newWorkspace}}",
								"meta"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Workspace Entities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each workspace,",
									"/*",
									"jsonResponse.data.forEach(function (workspaceDetails) {",
									"  console.log('Workspace: ' + workspaceDetails.domain);",
									"  postman.setEnvironmentVariable(\"workspace_\"+workspaceDetails.name, workspaceDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/{{workspace_newWorkspace}}/entities",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"{{workspace_newWorkspace}}",
								"entities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Workspace Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each workspace,",
									"/*",
									"jsonResponse.data.forEach(function (workspaceDetails) {",
									"  console.log('Workspace: ' + workspaceDetails.domain);",
									"  postman.setEnvironmentVariable(\"workspace_\"+workspaceDetails.name, workspaceDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/newWorkspace/files",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"newWorkspace",
								"files"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Workspace",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for the workspace",
									"console.log('Workspace: ' + jsonResponse.name);",
									"postman.setEnvironmentVariable(\"workspace_\"+jsonResponse.name, jsonResponse.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"newWorkspace\"\n}\n"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Workspace",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"//var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"/*",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/{{workspace_newWorkspace}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"{{workspace_newWorkspace}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Workspace (file entities)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"jsonResponse.data.forEach(function (entityDetails) {",
									"",
									"    if (entityDetails.entity_type == \"files\" & entityDetails.unique_field_name == \"id\") {",
									"",
									"        var filesEntityUrl = postman.getEnvironmentVariable('baseURL') + ':' +postman.getEnvironmentVariable('adminPort') + '/newWorkspace/files/' + entityDetails.entity_id;",
									"",
									"        console.log('DELETE file : ' + filesEntityUrl);",
									"    ",
									"        pm.sendRequest({",
									"            url: filesEntityUrl,",
									"            method: 'DELETE',",
									"        }, function (err, res) {",
									"            console.log(res);",
									"        });",
									"",
									"    }",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/{{workspace_newWorkspace}}/entities",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"{{workspace_newWorkspace}}",
								"entities"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}