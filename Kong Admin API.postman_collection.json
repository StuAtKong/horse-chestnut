{
	"info": {
		"_postman_id": "dbc59b97-5ad0-4f1c-a92a-a2a5707f8710",
		"name": "Kong Admin API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Routes",
			"item": [
				{
					"name": "Get Routes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Route",
									"jsonResponse.data.forEach(function (routeDetails) {",
									"    ",
									"    ",
									"    if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"      console.log('Route: ' + routeDetails.id);",
									"    }",
									"",
									"  postman.setEnvironmentVariable(\"route_\"+routeDetails.id, routeDetails.id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/routes",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Route",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "protocols[]",
									"value": "http",
									"type": "text"
								},
								{
									"key": "methods",
									"value": "GET",
									"type": "text"
								},
								{
									"key": "methods",
									"value": "POST",
									"type": "text"
								},
								{
									"key": "methods",
									"value": "DELETE",
									"type": "text"
								},
								{
									"key": "paths[]",
									"value": "/comment/\\S+",
									"type": "text"
								},
								{
									"key": "strip_path",
									"value": "false",
									"type": "text"
								},
								{
									"key": "preserve_host",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/{{service_temp}}/routes",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"{{service_temp}}",
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Route",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/routes/d2798b01-e804-4a2a-8930-983416384d18",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"routes",
								"d2798b01-e804-4a2a-8930-983416384d18"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create serverless plugin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "password"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "pre-function",
									"type": "text"
								},
								{
									"key": "config.functions",
									"value": "@shared_dic.lua",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://192.168.57.3:8001/centos/routes/shared_dictionary/plugins",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"57",
								"3"
							],
							"port": "8001",
							"path": [
								"centos",
								"routes",
								"shared_dictionary",
								"plugins"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Services",
			"item": [
				{
					"name": "Get All Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "26f388f3-f2a3-49e6-a05e-4572d722ca06",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"//jsonResponse.data.forEach(function (serviceDetails) {",
									"//  console.log('Service: ' + serviceDetails.domain);",
									"//  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"//})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/{{service_temp}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"{{service_temp}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for the service",
									"//console.log('Service: ' + jsonResponse.name);",
									"postman.setEnvironmentVariable(\"service_\"+ jsonResponse.name, jsonResponse.name);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"host\":\"10.0.10.1\",\n   \"connect_timeout\":60000,\n   \"protocol\":\"http\",\n   \"name\":\"temp\",\n   \"read_timeout\":60000,\n   \"port\":80,\n   \"path\":\"/status/500\",\n   \"retries\":5,\n   \"write_timeout\":60000\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create/Update Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"host\":\"10.0.10.1\",\n   \"connect_timeout\":60000,\n   \"protocol\":\"http\",\n   \"name\":\"temp\",\n   \"read_timeout\":60000,\n   \"port\":80,\n   \"path\":\"/status/200\",\n   \"retries\":5,\n   \"write_timeout\":60000\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/{{service_temp}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"{{service_temp}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"host\":\"10.0.10.1\",\n   \"connect_timeout\":60000,\n   \"protocol\":\"http\",\n   \"name\":\"temp\",\n   \"read_timeout\":60000,\n   \"port\":80,\n   \"path\":\"/status/200\",\n   \"retries\":5,\n   \"write_timeout\":60000\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/{{service_temp}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"{{service_temp}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"//Delete the service name env variable",
									"var serviceName = (pm.request.url.path[pm.request.url.path.length -1]);",
									"postman.clearEnvironmentVariable(\"service_\" + serviceName);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/{{service_temp}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"{{service_temp}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Upstreams",
			"item": [
				{
					"name": "Get Upstreams",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c973721-390d-4fd6-a9fe-a8c24b4bd625",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Route",
									"jsonResponse.data.forEach(function (upstreamDetails) {",
									"    ",
									"  console.log('Route: ' + upstreamDetails.name);",
									"",
									"  postman.setEnvironmentVariable(\"upstream_\"+upstreamDetails.name, upstreamDetails.id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/upstreams",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"upstreams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Upstream",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/upstreams/{{upstream_upstream-B}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"upstreams",
								"{{upstream_upstream-B}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Upstream Targets",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7ea5d0e-5ec5-43b7-8555-abeda3784f02",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Route",
									"jsonResponse.data.forEach(function (targetDetails) {",
									"    ",
									"  console.log('Route: ' + targetDetails.target);",
									"",
									"  postman.setEnvironmentVariable(\"target_\"+targetDetails.target, targetDetails.id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/upstreams/{{upstream_upstream-B}}/targets",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"upstreams",
								"{{upstream_upstream-B}}",
								"targets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Upstream Target",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/upstreams/{{upstream_upstream-B}}/targets/2fb3ff88-284a-4031-8967-6c5b7679b8d4",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"upstreams",
								"{{upstream_upstream-B}}",
								"targets",
								"2fb3ff88-284a-4031-8967-6c5b7679b8d4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Upstream Target Healthy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"type": "text",
								"value": "{{adminToken}}"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/upstreams/{{upstream_upstream-B}}/targets/{{target_host-b.local:80}}/healthy",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"upstreams",
								"{{upstream_upstream-B}}",
								"targets",
								"{{target_host-b.local:80}}",
								"healthy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Upstream Target Unhealthy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"type": "text",
								"value": "{{adminToken}}"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/upstreams/{{upstream_upstream-B}}/targets/{{target_host-b.local:80}}/unhealthy",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"upstreams",
								"{{upstream_upstream-B}}",
								"targets",
								"{{target_host-b.local:80}}",
								"unhealthy"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Plugins",
			"item": [
				{
					"name": "Get All Plugins",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/plugins",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"plugins"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Plugin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"/*",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/centos/plugins/{{plugin_8482ea22-8a52-4ff2-a6ce-14ad680bbe34}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"centos",
								"plugins",
								"{{plugin_8482ea22-8a52-4ff2-a6ce-14ad680bbe34}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Global Plugin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"/*",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n\"name\": \"response-transformer\", \n\"config\": { \n  \"remove.headers\": \"Server\"\n  } \n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/plugins/",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"plugins",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Plugin to Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"/*",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n\"name\": \"cors\", \n\"config\": { \n  \"credentials\": null, \n  \"preflight_continue\": null \n  } \n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/{{service_temp}}/plugins/",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"{{service_temp}}",
								"plugins",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Plugin to Route",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"/*",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"config\": {\n        \"key_names\": [\n            \"apikey\"\n        ],\n        \"run_on_preflight\": true,\n        \"anonymous\": \"unknown\",\n        \"hide_credentials\": false,\n        \"key_in_body\": false\n    },\n    \"name\": \"key-auth\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/routes/{{route_bcdf84ab-3def-44cb-9497-017c95b253e6}}/plugins/",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"routes",
								"{{route_bcdf84ab-3def-44cb-9497-017c95b253e6}}",
								"plugins",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Plugin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"/*",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n\"name\": \"cors\", \n\"config\": { \n  \"credentials\": null, \n  \"preflight_continue\": null \n  } \n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/plugins/{{plugin_6e9b5b5c-e36d-4bfc-bac6-5b05b53f8b8a}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"plugins",
								"{{plugin_6e9b5b5c-e36d-4bfc-bac6-5b05b53f8b8a}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Plugin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"/*",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/plugins/{{plugin_26878b50-dd4d-4fb3-8a49-9973613bb5b8}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"plugins",
								"{{plugin_26878b50-dd4d-4fb3-8a49-9973613bb5b8}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Certificates",
			"item": [
				{
					"name": "Get Certificates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/certificates",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"certificates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Certificates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"type": "text",
								"value": "{{adminToken}}"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "cert",
									"type": "file",
									"src": "/Users/sroberts/Documents/certs/api-kong/fullchain.pem"
								},
								{
									"key": "key",
									"type": "file",
									"src": "/Users/sroberts/Documents/certs/api-kong/privkey.pem"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/certificates",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"certificates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Certificate with SNI",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "cert",
									"type": "file",
									"src": "/Users/sroberts/Documents/certs/api-kong.heronwood.co.uk/cert.pem"
								},
								{
									"key": "key",
									"type": "file",
									"src": "/Users/sroberts/Documents/certs/api-kong.heronwood.co.uk/privkey.pem"
								},
								{
									"key": "snis[]",
									"value": "api-kong.heronwood.co.uk",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/certificates",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"certificates"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SNIs",
			"item": [
				{
					"name": "Get SNIs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/snis",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"snis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SNI",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"type": "text",
								"value": "{{adminToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"api-kong.heronwood.co.uk\",\n \"certificate\":{\"id\":\"33238265-6ad2-436e-b3cb-eb476b6770e3\"}}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/snis",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"snis"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Workspaces",
			"item": [
				{
					"name": "Get Workspaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each workspace,",
									"jsonResponse.data.forEach(function (workspaceDetails) {",
									"  console.log('Workspace: ' + workspaceDetails.domain);",
									"  postman.setEnvironmentVariable(\"workspace_\"+workspaceDetails.name, workspaceDetails.id);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Workspace Metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each workspace,",
									"/*",
									"jsonResponse.data.forEach(function (workspaceDetails) {",
									"  console.log('Workspace: ' + workspaceDetails.domain);",
									"  postman.setEnvironmentVariable(\"workspace_\"+workspaceDetails.name, workspaceDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/{{workspace_default}}/",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"{{workspace_default}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Workspace Entities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each workspace,",
									"/*",
									"jsonResponse.data.forEach(function (workspaceDetails) {",
									"  console.log('Workspace: ' + workspaceDetails.domain);",
									"  postman.setEnvironmentVariable(\"workspace_\"+workspaceDetails.name, workspaceDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/{{workspace_newWorkspace}}/entities",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"{{workspace_newWorkspace}}",
								"entities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Workspace Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each workspace,",
									"/*",
									"jsonResponse.data.forEach(function (workspaceDetails) {",
									"  console.log('Workspace: ' + workspaceDetails.domain);",
									"  postman.setEnvironmentVariable(\"workspace_\"+workspaceDetails.name, workspaceDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/newWorkspace/files",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"newWorkspace",
								"files"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Workspace",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for the workspace",
									"console.log('Workspace: ' + jsonResponse.name);",
									"postman.setEnvironmentVariable(\"workspace_\"+jsonResponse.name, jsonResponse.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"stage\"\n}\n"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Workspace",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"//var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"/*",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/{{workspace_newWorkspace}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"{{workspace_newWorkspace}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Workspace (file entities)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"jsonResponse.data.forEach(function (entityDetails) {",
									"",
									"    if (entityDetails.entity_type == \"files\" & entityDetails.unique_field_name == \"id\") {",
									"",
									"        var filesEntityUrl = postman.getEnvironmentVariable('baseURL') + ':' +postman.getEnvironmentVariable('adminPort') + '/newWorkspace/files/' + entityDetails.entity_id;",
									"",
									"        console.log('DELETE file : ' + filesEntityUrl);",
									"    ",
									"        pm.sendRequest({",
									"            url: filesEntityUrl,",
									"            method: 'DELETE',",
									"        }, function (err, res) {",
									"            console.log(res);",
									"        });",
									"",
									"    }",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/{{workspace_newWorkspace}}/entities",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"{{workspace_newWorkspace}}",
								"entities"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dev Portal",
			"item": [
				{
					"name": "Enable Portal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each workspace,",
									"/*",
									"jsonResponse.data.forEach(function (workspaceDetails) {",
									"  console.log('Workspace: ' + workspaceDetails.domain);",
									"  postman.setEnvironmentVariable(\"workspace_\"+workspaceDetails.name, workspaceDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"type": "text",
								"value": "{{adminToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"config\": {\n        \"portal\": true\n    }\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/{{workspace_default}}/",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"{{workspace_default}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"stu.roberts+dp2@konghq.com\",\n \"password\":\"password\",\n \"meta\":\"{\\\"full_name\\\":\\\"Developer Two\\\"}\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{portalAPIPort}}/default/register",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{portalAPIPort}}",
							"path": [
								"default",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Portal Developers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/testabc/portal/developers",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"testabc",
								"portal",
								"developers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Developer Portal Account",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"type\": 1, \n \"status\": 0,\n \"meta\":\"{\\\"full_name\\\":\\\"\\\"}\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/testabc/portal/developers/db04cae6-3c0e-46d5-afeb-8508223b587e",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"testabc",
								"portal",
								"developers",
								"db04cae6-3c0e-46d5-afeb-8508223b587e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update OAuth2 Credentials",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "stu.roberts+dp@konghq.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"created_at\":1550848972000,\n \"client_id\":\"DJMHm85PPcj4przbE72VPWyV7FXNyLmp\",\n \"id\":\"64819670-8002-4800-8656-4fe3a88e28aa\",\n \"redirect_uri\":[\"http://localhost\"],\n \"name\":\"abc\",\n \"client_secret\":\"YfabxG1tRH84F6rpBQX5ngx51C2DHxhO\",\n \"consumer_id\":\"99003f4c-4e63-4654-8e13-8961fb83f13b\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{portalAPIPort}}/credentials/oauth2/64819670-8002-4800-8656-4fe3a88e28aa",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{portalAPIPort}}",
							"path": [
								"credentials",
								"oauth2",
								"64819670-8002-4800-8656-4fe3a88e28aa"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/default/files/themes/base/assets/images/bg-pattern.svg",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"default",
								"files",
								"themes",
								"base",
								"assets",
								"images",
								"bg-pattern.svg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add File",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/default/files/themes/base/assets/images/bg-pattern.svg",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"default",
								"files",
								"themes",
								"base",
								"assets",
								"images",
								"bg-pattern.svg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DevPortal config",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/docker-postgres",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"docker-postgres"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update DevPortal config",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2075db-8933-49ff-afcc-b6f74f1df439",
								"exec": [
									"/*",
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each CH app\",",
									"jsonResponse.data.forEach(function (pluginDetails) {",
									"  console.log('Route: ' + pluginDetails.domain);",
									"  postman.setEnvironmentVariable(\"plugin_\"+pluginDetails.id, pluginDetails.id);",
									"})",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"config\": {\n\t\t\"portal_is_legacy\": true\n\t}\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/docker-postgres",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"docker-postgres"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Entities",
			"item": [
				{
					"name": "Get All Entities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"/*",
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/default/entities",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"default",
								"entities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Entity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"/*",
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/default/entities/7a28c404-610a-4e96-ae32-66d529fda7fb",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"default",
								"entities",
								"7a28c404-610a-4e96-ae32-66d529fda7fb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Entity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"/*",
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"entities\":\"302ac7c7-0508-4a18-a45e-51b25a9c07e5\"}\n"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/workspaces/TeamA/entities",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"workspaces",
								"TeamA",
								"entities"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RBAC",
			"item": [
				{
					"name": "Get User Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/userinfo",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"userinfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/rbac/users",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"rbac",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/rbac/users/stu/roles",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"rbac",
								"users",
								"stu",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"/*",
									"jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"*/",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"comment\": \"Deployment user\", \"user_token\": \"abc1234\", \"enabled\": true, \"name\": \"rm_it\"}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/rbac/users",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"rbac",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"stu\"}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/rbac/users",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"rbac",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"myadmin\"}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/default/rbac/users/abarnes",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"default",
								"rbac",
								"users",
								"abarnes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Roles to user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"/*",
									"jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"roles\":\"admin\"}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/default/rbac/users/rm_it/roles",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"default",
								"rbac",
								"users",
								"rm_it",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Admins",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/admins",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"admins"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invite Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"adminC\",\n \"email\":\"stu.roberts+adminC@konghq.com\"}\n"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/admins",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"admins"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Roles to admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"roles\":\"super-admin\"}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/admins/volvo2/roles",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"admins",
								"volvo2",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Roles to admin Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"roles\":\"super-admin\"}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/admins/volvo2/roles",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"admins",
								"volvo2",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Admin User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/admins/super",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"admins",
								"super"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Roles for admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/centos/admins/abarnes/roles",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"centos",
								"admins",
								"abarnes",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"token\":\"my-super-stu-token\",\n \"username\":\"super-stu\",\n \"email\":\"stu.roberts+super-stu@konghq.com\",\n \"password\":\"super-stu\"}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/admins/register",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"admins",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"stu.roberts+super@konghq.com\",\n \"token\":\"my-super-token\"}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/admins/password_resets",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"admins",
								"password_resets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Admin Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"type": "text",
								"value": "{{adminToken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"status\": 0,\n \"username\":\"admin\",\n \"email\":\"stu+admin@konghq.com\"}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/admins/admin",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"admins",
								"admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/default/rbac/roles/",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"default",
								"rbac",
								"roles",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/rbac/roles/super-admin",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"rbac",
								"roles",
								"super-admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"/*",
									"  jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"*/",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"new-super-admin\"}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/rbac/roles",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"rbac",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Permissions to Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"/*",
									"  jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"*/",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"workspace\":\"*\",\n \"endpoint\":\"*\",\n \"negative\":false,\n \"actions\":\"create,read,update,delete\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/rbac/roles/new-super-admin/endpoints",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"rbac",
								"roles",
								"new-super-admin",
								"endpoints"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "OAuth Demo",
			"item": [
				{
					"name": "Add Service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "mock-service",
									"type": "text"
								},
								{
									"key": "url",
									"value": "http://mockbin.org/request",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Route",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "hosts[]",
									"value": "mockbin.org",
									"type": "text"
								},
								{
									"key": "paths[]",
									"value": "/mock",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/mock-service/routes",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"mock-service",
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Call API",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "mockbin.org"
							},
							{
								"key": "Authorization",
								"value": "bearer BjQMIzf2cgzZnGb0IwZillsgWhOxkTmb",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://127.0.0.1:8000/mock",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"mock"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add OAuth2 Plugin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "oauth2",
									"type": "text"
								},
								{
									"key": "config.scopes",
									"value": "email, phone, address",
									"type": "text"
								},
								{
									"key": "config.mandatory_scope",
									"value": "true",
									"type": "text"
								},
								{
									"key": "config.enable_authorization_code",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/mock-service/plugins/",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"mock-service",
								"plugins",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Consumer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "thefosk",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/consumers/",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"consumers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create OAuth2 Application",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Hello World App",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "http://konghq.com/",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/consumers/thefosk/oauth2/",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"consumers",
								"thefosk",
								"oauth2",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get OAuth2 Apps",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"client_id\":\"viJ8dMD6rCpk27olm0kBvoL36JIunsph\"}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/oauth2",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"oauth2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Access Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Host",
								"value": "mockbin.org"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "viJ8dMD6rCpk27olm0kBvoL36JIunsph",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "Aq2U7Sz6UCsLs9IWA17xNWQPnWPWFPHw",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "http://konghq.com/",
									"type": "text"
								},
								{
									"key": "code",
									"value": "qKS9j2tl3ANzzAs1mlU9SvocS1f3GAuH",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://127.0.0.1:8443/mock/oauth2/token",
							"protocol": "https",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8443",
							"path": [
								"mock",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "OIDC",
			"item": [
				{
					"name": "Get All Issuers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Route",
									"jsonResponse.data.forEach(function (issuerDetails) {",
									"    ",
									"    ",
									"    if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"      console.log('Route: ' + routeDetails.id);",
									"    }",
									"",
									"  postman.setEnvironmentVariable(\"issuer_\"+issuerDetails.id, issuerDetails.id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/openid-connect/issuers/",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"openid-connect",
								"issuers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Issuer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"type": "text",
								"value": "{{adminToken}}"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/openid-connect/issuers/{{issuer_4dfcf45a-c945-40b0-aa80-09469328169d}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"openid-connect",
								"issuers",
								"{{issuer_4dfcf45a-c945-40b0-aa80-09469328169d}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Issuer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"type": "text",
								"value": "{{adminToken}}"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/openid-connect/issuers/{{issuer_4dfcf45a-c945-40b0-aa80-09469328169d}}",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"openid-connect",
								"issuers",
								"{{issuer_4dfcf45a-c945-40b0-aa80-09469328169d}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Consumers",
			"item": [
				{
					"name": "Get Consumers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"/*",
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/consumers",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"consumers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Consumers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"/*",
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for each Service",
									"jsonResponse.data.forEach(function (serviceDetails) {",
									"  if (postman.getEnvironmentVariable(\"debug\") === \"1\" ){",
									"    console.log('Service: ' + serviceDetails.domain);",
									"  }",
									"  postman.setEnvironmentVariable(\"service_\"+serviceDetails.name, serviceDetails.id);",
									"})",
									"",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/consumers/",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"consumers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Consumers ACL Groups",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/docker-postgres/consumers/consA/acls",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"docker-postgres",
								"consumers",
								"consA",
								"acls"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Consumers to ACL Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "group",
									"value": "allowed-group",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/docker-postgres/consumers/consA/acls",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"docker-postgres",
								"consumers",
								"consA",
								"acls"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Setup",
			"item": [
				{
					"name": "Create Echo Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for the service",
									"//console.log('Service: ' + jsonResponse.name);",
									"postman.setEnvironmentVariable(\"service_\"+ jsonResponse.name, jsonResponse.name);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"host\": \"10.0.10.1\",\n    \"connect_timeout\": 60000,\n    \"protocol\": \"http\",\n    \"name\": \"Echo\",\n    \"read_timeout\": 60000,\n    \"port\": 80,\n    \"path\": \"/anything\",\n    \"retries\": 5,\n    \"write_timeout\": 60000\n}\n\n"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create IP Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									"var jsonResponse = JSON.parse(responseBody);",
									"",
									"// Create a Postman env variable for the service",
									"//console.log('Service: ' + jsonResponse.name);",
									"postman.setEnvironmentVariable(\"service_\"+ jsonResponse.name, jsonResponse.name);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"host\": \"10.0.10.1\",\n    \"connect_timeout\": 60000,\n    \"protocol\": \"http\",\n    \"name\": \"IP\",\n    \"read_timeout\": 60000,\n    \"port\": 80,\n    \"path\": \"/ip\",\n    \"retries\": 5,\n    \"write_timeout\": 60000\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Echo Route",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"strip_path\": true,\n    \"destinations\": null,\n    \"protocols\": [\n        \"http\"\n    ],\n    \"snis\": null,\n    \"hosts\": null,\n    \"name\": \"Echo\",\n    \"preserve_host\": false,\n    \"regex_priority\": 0,\n    \"sources\": null,\n    \"service\": {\n        \"id\": \"97986044-a7d3-4302-a9e7-81f14e71d6a6\"\n    },\n    \"paths\": [\n        \"/echo\"\n    ],\n    \"methods\": null\n}\n"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/{{service_temp}}/routes",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"{{service_temp}}",
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create IP Route",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"strip_path\": true,\n    \"destinations\": null,\n    \"protocols\": [\n        \"http\"\n    ],\n    \"snis\": null,\n    \"hosts\": null,\n    \"name\": \"IP\",\n    \"preserve_host\": false,\n    \"regex_priority\": 0,\n    \"sources\": null,\n    \"service\": {\n        \"id\": \"3b6cb67b-b7fe-47a8-b77b-d92d3021483b\"\n    },\n    \"paths\": [\n        \"/ip\"\n    ],\n    \"methods\": null\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/services/{{service_temp}}/routes",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"services",
								"{{service_temp}}",
								"routes"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Vault",
			"item": [
				{
					"name": "Get All Vaults",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/vaults",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"vaults"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Vault",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"name\":\"kong-auth\",\n\"mount\":\"kong-auth\",\n\"protocol\":\"http\",\n\"host\":\"10.0.10.1\",\n\"port\":8200,\n\"vault_token\":\"s.m3w9gdV0uMDYFpMgEWSB2mtM\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/vaults",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"vaults"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Audits",
			"item": [
				{
					"name": "Get Request Audits",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/audit/requests",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"audit",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Request Objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d8c690d-4e83-4a9d-be81-87c9b36d1c67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/audit/objects",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"audit",
								"objects"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Cache",
			"item": [
				{
					"name": "Get Cache",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/cache",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"cache"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clear Cache",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Kong-Admin-Token",
								"value": "{{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}:{{adminPort}}/cache",
							"host": [
								"{{baseURL}}"
							],
							"port": "{{adminPort}}",
							"path": [
								"cache"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Kong Status",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Kong-Admin-Token",
						"value": "{{adminToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseURL}}:{{adminPort}}/status",
					"host": [
						"{{baseURL}}"
					],
					"port": "{{adminPort}}",
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "Kong Config",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Kong-Admin-Token",
						"value": "{{adminToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseURL}}:{{adminPort}}/",
					"host": [
						"{{baseURL}}"
					],
					"port": "{{adminPort}}",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "User Info",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Kong-Admin-Token",
						"value": "{{adminToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseURL}}:{{adminPort}}/userinfo",
					"host": [
						"{{baseURL}}"
					],
					"port": "{{adminPort}}",
					"path": [
						"userinfo"
					]
				}
			},
			"response": []
		},
		{
			"name": "Kong Info",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Kong-Admin-Token",
						"value": "{{adminToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseURL}}:{{adminPort}}/default/kong",
					"host": [
						"{{baseURL}}"
					],
					"port": "{{adminPort}}",
					"path": [
						"default",
						"kong"
					]
				}
			},
			"response": []
		},
		{
			"name": "Kong Metrics (Prometheus plugin)",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Kong-Admin-Token",
						"value": "{{adminToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseURL}}:{{adminPort}}/metrics",
					"host": [
						"{{baseURL}}"
					],
					"port": "{{adminPort}}",
					"path": [
						"metrics"
					]
				}
			},
			"response": []
		}
	]
}